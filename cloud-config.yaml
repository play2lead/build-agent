#cloud-config

coreos:
  etcd:
    # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=1
    # specify the intial size of your cluster with ?size=X
    discovery: https://discovery.etcd.io/<TOKEN>
    # multi-region and multi-cloud deployments need to use $public_ipv4
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    # Attached storage mount to avoid space overfow with default tiny GCE drive
    - name: format-ephemeral.service
      command: start
      content: |
        [Unit]
        Description=Formats the ephemeral drive
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/sbin/wipefs -f /dev/disk/by-id/google-builds
        ExecStart=/usr/sbin/mkfs.btrfs -f /dev/disk/by-id/google-builds
    - name: var-lib-docker.mount
      command: start
      content: |
        Before=docker.service
        [Mount]
        What=/dev/disk/by-id/google-disk-1
        Where=/var/lib/docker
        Type=btrfs
    - name: format-ephemeral-builds.service
      command: start
      content: |
        [Unit]
        Description=Formats the builds drive
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/usr/sbin/wipefs -f /dev/disk/by-id/google-builds
        ExecStart=/usr/sbin/mkfs.btrfs -f /dev/disk/by-id/google-builds
    - name: buildkite.mount
      command: start
      content: |
        Before=docker.service
        [Mount]
        What=/dev/disk/by-id/google-builds
        Where=/buildkite
        Type=btrfs
    - name: fail2ban.service
      command: start
      content: |
        [Unit]
        Description=Fail2ban systemd monitoring service
        After=docker.service
        [Service]
        User=core
        TimeoutStartSec=10m
        EnvironmentFile=/etc/environment
        ExecStartPre=-/usr/bin/docker kill fail2ban
        ExecStartPre=-/usr/bin/docker rm fail2ban
        ExecStart=/usr/bin/docker run --name fail2ban --privileged --net=host -v /run/systemd:/var/run/systemd ianblenke/fail2ban
        ExecStop=/usr/bin/docker kill fail2ban
        ExecStop=/usr/bin/docker rm fail2ban
        Restart=on-failure
        TimeoutSec=10
        RestartSec=5
        [X-Fleet]
        Global=true
